#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ELearning
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\ELMEHDI\\SOURCE\\REPOS\\ELEARNING\\ELEARNING\\APP_DATA\\ELEARNING.MDF")]
	public partial class myDataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCoursesTable(CoursesTable instance);
    partial void UpdateCoursesTable(CoursesTable instance);
    partial void DeleteCoursesTable(CoursesTable instance);
    partial void InsertCourseVideoJenct(CourseVideoJenct instance);
    partial void UpdateCourseVideoJenct(CourseVideoJenct instance);
    partial void DeleteCourseVideoJenct(CourseVideoJenct instance);
    partial void InsertniveauEtudeTable(niveauEtudeTable instance);
    partial void UpdateniveauEtudeTable(niveauEtudeTable instance);
    partial void DeleteniveauEtudeTable(niveauEtudeTable instance);
    partial void InsertJoinTeacherNE(JoinTeacherNE instance);
    partial void UpdateJoinTeacherNE(JoinTeacherNE instance);
    partial void DeleteJoinTeacherNE(JoinTeacherNE instance);
    partial void InsertJoinTeacherCourse(JoinTeacherCourse instance);
    partial void UpdateJoinTeacherCourse(JoinTeacherCourse instance);
    partial void DeleteJoinTeacherCourse(JoinTeacherCourse instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertVideosTable(VideosTable instance);
    partial void UpdateVideosTable(VideosTable instance);
    partial void DeleteVideosTable(VideosTable instance);
    partial void InsertJoinCoursesPDF(JoinCoursesPDF instance);
    partial void UpdateJoinCoursesPDF(JoinCoursesPDF instance);
    partial void DeleteJoinCoursesPDF(JoinCoursesPDF instance);
    partial void InsertJoinCoursesExercice(JoinCoursesExercice instance);
    partial void UpdateJoinCoursesExercice(JoinCoursesExercice instance);
    partial void DeleteJoinCoursesExercice(JoinCoursesExercice instance);
    partial void InsertExercice(Exercice instance);
    partial void UpdateExercice(Exercice instance);
    partial void DeleteExercice(Exercice instance);
    partial void InsertPDF(PDF instance);
    partial void UpdatePDF(PDF instance);
    partial void DeletePDF(PDF instance);
    #endregion
		
		public myDataBaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["C__USERS_ELMEHDI_SOURCE_REPOS_ELEARNING_ELEARNING_APP_DATA_ELEARNING_MDFConnectio" +
						"nString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public myDataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CoursesTable> CoursesTables
		{
			get
			{
				return this.GetTable<CoursesTable>();
			}
		}
		
		public System.Data.Linq.Table<CourseVideoJenct> CourseVideoJencts
		{
			get
			{
				return this.GetTable<CourseVideoJenct>();
			}
		}
		
		public System.Data.Linq.Table<niveauEtudeTable> niveauEtudeTables
		{
			get
			{
				return this.GetTable<niveauEtudeTable>();
			}
		}
		
		public System.Data.Linq.Table<JoinTeacherNE> JoinTeacherNEs
		{
			get
			{
				return this.GetTable<JoinTeacherNE>();
			}
		}
		
		public System.Data.Linq.Table<JoinTeacherCourse> JoinTeacherCourses
		{
			get
			{
				return this.GetTable<JoinTeacherCourse>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<VideosTable> VideosTables
		{
			get
			{
				return this.GetTable<VideosTable>();
			}
		}
		
		public System.Data.Linq.Table<JoinCoursesPDF> JoinCoursesPDFs
		{
			get
			{
				return this.GetTable<JoinCoursesPDF>();
			}
		}
		
		public System.Data.Linq.Table<JoinCoursesExercice> JoinCoursesExercices
		{
			get
			{
				return this.GetTable<JoinCoursesExercice>();
			}
		}
		
		public System.Data.Linq.Table<Exercice> Exercices
		{
			get
			{
				return this.GetTable<Exercice>();
			}
		}
		
		public System.Data.Linq.Table<PDF> PDFs
		{
			get
			{
				return this.GetTable<PDF>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoursesTable")]
	public partial class CoursesTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private System.Nullable<System.DateTime> _DateDebut;
		
		private string _Description;
		
		private string _photo;
		
		private string _NiveauEtude;
		
		private System.Nullable<double> _prix;
		
		private string _photoDetail1;
		
		private string _photoDetail2;
		
		private string _photoDetail3;
		
		private string _photoDetail4;
		
		private System.Nullable<int> _nbrEtoile;
		
		private System.Nullable<int> _nbrAchat;
		
		private string _DescriLong;
		
		private System.Nullable<System.DateTime> _DateFin;
		
		private System.Nullable<int> _nbrHeures;
		
		private EntitySet<CourseVideoJenct> _CourseVideoJencts;
		
		private EntitySet<JoinTeacherCourse> _JoinTeacherCourses;
		
		private EntitySet<JoinCoursesPDF> _JoinCoursesPDFs;
		
		private EntitySet<JoinCoursesExercice> _JoinCoursesExercices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnDateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnNiveauEtudeChanging(string value);
    partial void OnNiveauEtudeChanged();
    partial void OnprixChanging(System.Nullable<double> value);
    partial void OnprixChanged();
    partial void OnphotoDetail1Changing(string value);
    partial void OnphotoDetail1Changed();
    partial void OnphotoDetail2Changing(string value);
    partial void OnphotoDetail2Changed();
    partial void OnphotoDetail3Changing(string value);
    partial void OnphotoDetail3Changed();
    partial void OnphotoDetail4Changing(string value);
    partial void OnphotoDetail4Changed();
    partial void OnnbrEtoileChanging(System.Nullable<int> value);
    partial void OnnbrEtoileChanged();
    partial void OnnbrAchatChanging(System.Nullable<int> value);
    partial void OnnbrAchatChanged();
    partial void OnDescriLongChanging(string value);
    partial void OnDescriLongChanged();
    partial void OnDateFinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChanged();
    partial void OnnbrHeuresChanging(System.Nullable<int> value);
    partial void OnnbrHeuresChanged();
    #endregion
		
		public CoursesTable()
		{
			this._CourseVideoJencts = new EntitySet<CourseVideoJenct>(new Action<CourseVideoJenct>(this.attach_CourseVideoJencts), new Action<CourseVideoJenct>(this.detach_CourseVideoJencts));
			this._JoinTeacherCourses = new EntitySet<JoinTeacherCourse>(new Action<JoinTeacherCourse>(this.attach_JoinTeacherCourses), new Action<JoinTeacherCourse>(this.detach_JoinTeacherCourses));
			this._JoinCoursesPDFs = new EntitySet<JoinCoursesPDF>(new Action<JoinCoursesPDF>(this.attach_JoinCoursesPDFs), new Action<JoinCoursesPDF>(this.detach_JoinCoursesPDFs));
			this._JoinCoursesExercices = new EntitySet<JoinCoursesExercice>(new Action<JoinCoursesExercice>(this.attach_JoinCoursesExercices), new Action<JoinCoursesExercice>(this.detach_JoinCoursesExercices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NChar(100)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date")]
		public System.Nullable<System.DateTime> DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NChar(100)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NiveauEtude", DbType="NChar(100)")]
		public string NiveauEtude
		{
			get
			{
				return this._NiveauEtude;
			}
			set
			{
				if ((this._NiveauEtude != value))
				{
					this.OnNiveauEtudeChanging(value);
					this.SendPropertyChanging();
					this._NiveauEtude = value;
					this.SendPropertyChanged("NiveauEtude");
					this.OnNiveauEtudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Float")]
		public System.Nullable<double> prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photoDetail1", DbType="NChar(100)")]
		public string photoDetail1
		{
			get
			{
				return this._photoDetail1;
			}
			set
			{
				if ((this._photoDetail1 != value))
				{
					this.OnphotoDetail1Changing(value);
					this.SendPropertyChanging();
					this._photoDetail1 = value;
					this.SendPropertyChanged("photoDetail1");
					this.OnphotoDetail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photoDetail2", DbType="NChar(100)")]
		public string photoDetail2
		{
			get
			{
				return this._photoDetail2;
			}
			set
			{
				if ((this._photoDetail2 != value))
				{
					this.OnphotoDetail2Changing(value);
					this.SendPropertyChanging();
					this._photoDetail2 = value;
					this.SendPropertyChanged("photoDetail2");
					this.OnphotoDetail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photoDetail3", DbType="NChar(100)")]
		public string photoDetail3
		{
			get
			{
				return this._photoDetail3;
			}
			set
			{
				if ((this._photoDetail3 != value))
				{
					this.OnphotoDetail3Changing(value);
					this.SendPropertyChanging();
					this._photoDetail3 = value;
					this.SendPropertyChanged("photoDetail3");
					this.OnphotoDetail3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photoDetail4", DbType="NChar(100)")]
		public string photoDetail4
		{
			get
			{
				return this._photoDetail4;
			}
			set
			{
				if ((this._photoDetail4 != value))
				{
					this.OnphotoDetail4Changing(value);
					this.SendPropertyChanging();
					this._photoDetail4 = value;
					this.SendPropertyChanged("photoDetail4");
					this.OnphotoDetail4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbrEtoile", DbType="Int")]
		public System.Nullable<int> nbrEtoile
		{
			get
			{
				return this._nbrEtoile;
			}
			set
			{
				if ((this._nbrEtoile != value))
				{
					this.OnnbrEtoileChanging(value);
					this.SendPropertyChanging();
					this._nbrEtoile = value;
					this.SendPropertyChanged("nbrEtoile");
					this.OnnbrEtoileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbrAchat", DbType="Int")]
		public System.Nullable<int> nbrAchat
		{
			get
			{
				return this._nbrAchat;
			}
			set
			{
				if ((this._nbrAchat != value))
				{
					this.OnnbrAchatChanging(value);
					this.SendPropertyChanging();
					this._nbrAchat = value;
					this.SendPropertyChanged("nbrAchat");
					this.OnnbrAchatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriLong", DbType="NVarChar(MAX)")]
		public string DescriLong
		{
			get
			{
				return this._DescriLong;
			}
			set
			{
				if ((this._DescriLong != value))
				{
					this.OnDescriLongChanging(value);
					this.SendPropertyChanging();
					this._DescriLong = value;
					this.SendPropertyChanged("DescriLong");
					this.OnDescriLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date")]
		public System.Nullable<System.DateTime> DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbrHeures", DbType="Int")]
		public System.Nullable<int> nbrHeures
		{
			get
			{
				return this._nbrHeures;
			}
			set
			{
				if ((this._nbrHeures != value))
				{
					this.OnnbrHeuresChanging(value);
					this.SendPropertyChanging();
					this._nbrHeures = value;
					this.SendPropertyChanged("nbrHeures");
					this.OnnbrHeuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_CourseVideoJenct", Storage="_CourseVideoJencts", ThisKey="Id", OtherKey="IdCourse")]
		public EntitySet<CourseVideoJenct> CourseVideoJencts
		{
			get
			{
				return this._CourseVideoJencts;
			}
			set
			{
				this._CourseVideoJencts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinTeacherCourse", Storage="_JoinTeacherCourses", ThisKey="Id", OtherKey="idCourse")]
		public EntitySet<JoinTeacherCourse> JoinTeacherCourses
		{
			get
			{
				return this._JoinTeacherCourses;
			}
			set
			{
				this._JoinTeacherCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinCoursesPDF", Storage="_JoinCoursesPDFs", ThisKey="Id", OtherKey="idCourse")]
		public EntitySet<JoinCoursesPDF> JoinCoursesPDFs
		{
			get
			{
				return this._JoinCoursesPDFs;
			}
			set
			{
				this._JoinCoursesPDFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinCoursesExercice", Storage="_JoinCoursesExercices", ThisKey="Id", OtherKey="idCourse")]
		public EntitySet<JoinCoursesExercice> JoinCoursesExercices
		{
			get
			{
				return this._JoinCoursesExercices;
			}
			set
			{
				this._JoinCoursesExercices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseVideoJencts(CourseVideoJenct entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = this;
		}
		
		private void detach_CourseVideoJencts(CourseVideoJenct entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = null;
		}
		
		private void attach_JoinTeacherCourses(JoinTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = this;
		}
		
		private void detach_JoinTeacherCourses(JoinTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = null;
		}
		
		private void attach_JoinCoursesPDFs(JoinCoursesPDF entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = this;
		}
		
		private void detach_JoinCoursesPDFs(JoinCoursesPDF entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = null;
		}
		
		private void attach_JoinCoursesExercices(JoinCoursesExercice entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = this;
		}
		
		private void detach_JoinCoursesExercices(JoinCoursesExercice entity)
		{
			this.SendPropertyChanging();
			entity.CoursesTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseVideoJenct")]
	public partial class CourseVideoJenct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdJenct;
		
		private System.Nullable<int> _IdCourse;
		
		private System.Nullable<int> _IdVideo;
		
		private EntityRef<CoursesTable> _CoursesTable;
		
		private EntityRef<VideosTable> _VideosTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdJenctChanging(int value);
    partial void OnIdJenctChanged();
    partial void OnIdCourseChanging(System.Nullable<int> value);
    partial void OnIdCourseChanged();
    partial void OnIdVideoChanging(System.Nullable<int> value);
    partial void OnIdVideoChanged();
    #endregion
		
		public CourseVideoJenct()
		{
			this._CoursesTable = default(EntityRef<CoursesTable>);
			this._VideosTable = default(EntityRef<VideosTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJenct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdJenct
		{
			get
			{
				return this._IdJenct;
			}
			set
			{
				if ((this._IdJenct != value))
				{
					this.OnIdJenctChanging(value);
					this.SendPropertyChanging();
					this._IdJenct = value;
					this.SendPropertyChanged("IdJenct");
					this.OnIdJenctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCourse", DbType="Int")]
		public System.Nullable<int> IdCourse
		{
			get
			{
				return this._IdCourse;
			}
			set
			{
				if ((this._IdCourse != value))
				{
					if (this._CoursesTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCourseChanging(value);
					this.SendPropertyChanging();
					this._IdCourse = value;
					this.SendPropertyChanged("IdCourse");
					this.OnIdCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideo", DbType="Int")]
		public System.Nullable<int> IdVideo
		{
			get
			{
				return this._IdVideo;
			}
			set
			{
				if ((this._IdVideo != value))
				{
					if (this._VideosTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVideoChanging(value);
					this.SendPropertyChanging();
					this._IdVideo = value;
					this.SendPropertyChanged("IdVideo");
					this.OnIdVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_CourseVideoJenct", Storage="_CoursesTable", ThisKey="IdCourse", OtherKey="Id", IsForeignKey=true)]
		public CoursesTable CoursesTable
		{
			get
			{
				return this._CoursesTable.Entity;
			}
			set
			{
				CoursesTable previousValue = this._CoursesTable.Entity;
				if (((previousValue != value) 
							|| (this._CoursesTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoursesTable.Entity = null;
						previousValue.CourseVideoJencts.Remove(this);
					}
					this._CoursesTable.Entity = value;
					if ((value != null))
					{
						value.CourseVideoJencts.Add(this);
						this._IdCourse = value.Id;
					}
					else
					{
						this._IdCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoursesTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideosTable_CourseVideoJenct", Storage="_VideosTable", ThisKey="IdVideo", OtherKey="IdVideo", IsForeignKey=true)]
		public VideosTable VideosTable
		{
			get
			{
				return this._VideosTable.Entity;
			}
			set
			{
				VideosTable previousValue = this._VideosTable.Entity;
				if (((previousValue != value) 
							|| (this._VideosTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideosTable.Entity = null;
						previousValue.CourseVideoJencts.Remove(this);
					}
					this._VideosTable.Entity = value;
					if ((value != null))
					{
						value.CourseVideoJencts.Add(this);
						this._IdVideo = value.IdVideo;
					}
					else
					{
						this._IdVideo = default(Nullable<int>);
					}
					this.SendPropertyChanged("VideosTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.niveauEtudeTable")]
	public partial class niveauEtudeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _niveauEtude;
		
		private EntitySet<JoinTeacherNE> _JoinTeacherNEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnniveauEtudeChanging(string value);
    partial void OnniveauEtudeChanged();
    #endregion
		
		public niveauEtudeTable()
		{
			this._JoinTeacherNEs = new EntitySet<JoinTeacherNE>(new Action<JoinTeacherNE>(this.attach_JoinTeacherNEs), new Action<JoinTeacherNE>(this.detach_JoinTeacherNEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveauEtude", DbType="NChar(100)")]
		public string niveauEtude
		{
			get
			{
				return this._niveauEtude;
			}
			set
			{
				if ((this._niveauEtude != value))
				{
					this.OnniveauEtudeChanging(value);
					this.SendPropertyChanging();
					this._niveauEtude = value;
					this.SendPropertyChanged("niveauEtude");
					this.OnniveauEtudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niveauEtudeTable_JoinTeacherNE", Storage="_JoinTeacherNEs", ThisKey="Id", OtherKey="idNe")]
		public EntitySet<JoinTeacherNE> JoinTeacherNEs
		{
			get
			{
				return this._JoinTeacherNEs;
			}
			set
			{
				this._JoinTeacherNEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JoinTeacherNEs(JoinTeacherNE entity)
		{
			this.SendPropertyChanging();
			entity.niveauEtudeTable = this;
		}
		
		private void detach_JoinTeacherNEs(JoinTeacherNE entity)
		{
			this.SendPropertyChanging();
			entity.niveauEtudeTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JoinTeacherNE")]
	public partial class JoinTeacherNE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _idTeacher;
		
		private System.Nullable<int> _idNe;
		
		private EntityRef<niveauEtudeTable> _niveauEtudeTable;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidTeacherChanging(System.Nullable<int> value);
    partial void OnidTeacherChanged();
    partial void OnidNeChanging(System.Nullable<int> value);
    partial void OnidNeChanged();
    #endregion
		
		public JoinTeacherNE()
		{
			this._niveauEtudeTable = default(EntityRef<niveauEtudeTable>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int")]
		public System.Nullable<int> idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNe", DbType="Int")]
		public System.Nullable<int> idNe
		{
			get
			{
				return this._idNe;
			}
			set
			{
				if ((this._idNe != value))
				{
					if (this._niveauEtudeTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNeChanging(value);
					this.SendPropertyChanging();
					this._idNe = value;
					this.SendPropertyChanged("idNe");
					this.OnidNeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niveauEtudeTable_JoinTeacherNE", Storage="_niveauEtudeTable", ThisKey="idNe", OtherKey="Id", IsForeignKey=true)]
		public niveauEtudeTable niveauEtudeTable
		{
			get
			{
				return this._niveauEtudeTable.Entity;
			}
			set
			{
				niveauEtudeTable previousValue = this._niveauEtudeTable.Entity;
				if (((previousValue != value) 
							|| (this._niveauEtudeTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niveauEtudeTable.Entity = null;
						previousValue.JoinTeacherNEs.Remove(this);
					}
					this._niveauEtudeTable.Entity = value;
					if ((value != null))
					{
						value.JoinTeacherNEs.Add(this);
						this._idNe = value.Id;
					}
					else
					{
						this._idNe = default(Nullable<int>);
					}
					this.SendPropertyChanged("niveauEtudeTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_JoinTeacherNE", Storage="_Teacher", ThisKey="idTeacher", OtherKey="idTeacher", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.JoinTeacherNEs.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.JoinTeacherNEs.Add(this);
						this._idTeacher = value.idTeacher;
					}
					else
					{
						this._idTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JoinTeacherCourse")]
	public partial class JoinTeacherCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _idTeacher;
		
		private System.Nullable<int> _idCourse;
		
		private EntityRef<CoursesTable> _CoursesTable;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidTeacherChanging(System.Nullable<int> value);
    partial void OnidTeacherChanged();
    partial void OnidCourseChanging(System.Nullable<int> value);
    partial void OnidCourseChanged();
    #endregion
		
		public JoinTeacherCourse()
		{
			this._CoursesTable = default(EntityRef<CoursesTable>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int")]
		public System.Nullable<int> idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int")]
		public System.Nullable<int> idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					if (this._CoursesTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinTeacherCourse", Storage="_CoursesTable", ThisKey="idCourse", OtherKey="Id", IsForeignKey=true)]
		public CoursesTable CoursesTable
		{
			get
			{
				return this._CoursesTable.Entity;
			}
			set
			{
				CoursesTable previousValue = this._CoursesTable.Entity;
				if (((previousValue != value) 
							|| (this._CoursesTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoursesTable.Entity = null;
						previousValue.JoinTeacherCourses.Remove(this);
					}
					this._CoursesTable.Entity = value;
					if ((value != null))
					{
						value.JoinTeacherCourses.Add(this);
						this._idCourse = value.Id;
					}
					else
					{
						this._idCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoursesTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_JoinTeacherCourse", Storage="_Teacher", ThisKey="idTeacher", OtherKey="idTeacher", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.JoinTeacherCourses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.JoinTeacherCourses.Add(this);
						this._idTeacher = value.idTeacher;
					}
					else
					{
						this._idTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teachers")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTeacher;
		
		private string _userName;
		
		private string _pass;
		
		private string _nom;
		
		private string _prenom;
		
		private EntitySet<JoinTeacherNE> _JoinTeacherNEs;
		
		private EntitySet<JoinTeacherCourse> _JoinTeacherCourses;
		
		private EntitySet<VideosTable> _VideosTables;
		
		private EntitySet<Exercice> _Exercices;
		
		private EntitySet<PDF> _PDFs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTeacherChanging(int value);
    partial void OnidTeacherChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    #endregion
		
		public Teacher()
		{
			this._JoinTeacherNEs = new EntitySet<JoinTeacherNE>(new Action<JoinTeacherNE>(this.attach_JoinTeacherNEs), new Action<JoinTeacherNE>(this.detach_JoinTeacherNEs));
			this._JoinTeacherCourses = new EntitySet<JoinTeacherCourse>(new Action<JoinTeacherCourse>(this.attach_JoinTeacherCourses), new Action<JoinTeacherCourse>(this.detach_JoinTeacherCourses));
			this._VideosTables = new EntitySet<VideosTable>(new Action<VideosTable>(this.attach_VideosTables), new Action<VideosTable>(this.detach_VideosTables));
			this._Exercices = new EntitySet<Exercice>(new Action<Exercice>(this.attach_Exercices), new Action<Exercice>(this.detach_Exercices));
			this._PDFs = new EntitySet<PDF>(new Action<PDF>(this.attach_PDFs), new Action<PDF>(this.detach_PDFs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(250)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(250)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(250)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(250)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_JoinTeacherNE", Storage="_JoinTeacherNEs", ThisKey="idTeacher", OtherKey="idTeacher")]
		public EntitySet<JoinTeacherNE> JoinTeacherNEs
		{
			get
			{
				return this._JoinTeacherNEs;
			}
			set
			{
				this._JoinTeacherNEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_JoinTeacherCourse", Storage="_JoinTeacherCourses", ThisKey="idTeacher", OtherKey="idTeacher")]
		public EntitySet<JoinTeacherCourse> JoinTeacherCourses
		{
			get
			{
				return this._JoinTeacherCourses;
			}
			set
			{
				this._JoinTeacherCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_VideosTable", Storage="_VideosTables", ThisKey="idTeacher", OtherKey="idTeacher")]
		public EntitySet<VideosTable> VideosTables
		{
			get
			{
				return this._VideosTables;
			}
			set
			{
				this._VideosTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Exercice", Storage="_Exercices", ThisKey="idTeacher", OtherKey="idTeacher")]
		public EntitySet<Exercice> Exercices
		{
			get
			{
				return this._Exercices;
			}
			set
			{
				this._Exercices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_PDF", Storage="_PDFs", ThisKey="idTeacher", OtherKey="idTeacher")]
		public EntitySet<PDF> PDFs
		{
			get
			{
				return this._PDFs;
			}
			set
			{
				this._PDFs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JoinTeacherNEs(JoinTeacherNE entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_JoinTeacherNEs(JoinTeacherNE entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_JoinTeacherCourses(JoinTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_JoinTeacherCourses(JoinTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_VideosTables(VideosTable entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_VideosTables(VideosTable entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_Exercices(Exercice entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Exercices(Exercice entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_PDFs(PDF entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_PDFs(PDF entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideosTable")]
	public partial class VideosTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVideo;
		
		private string _statut;
		
		private string _titre;
		
		private string _descri;
		
		private string _urlFolder;
		
		private string _urlThumbnail;
		
		private System.Nullable<int> _idTeacher;
		
		private System.Nullable<System.DateTime> _datePublication;
		
		private EntitySet<CourseVideoJenct> _CourseVideoJencts;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVideoChanging(int value);
    partial void OnIdVideoChanged();
    partial void OnstatutChanging(string value);
    partial void OnstatutChanged();
    partial void OntitreChanging(string value);
    partial void OntitreChanged();
    partial void OndescriChanging(string value);
    partial void OndescriChanged();
    partial void OnurlFolderChanging(string value);
    partial void OnurlFolderChanged();
    partial void OnurlThumbnailChanging(string value);
    partial void OnurlThumbnailChanged();
    partial void OnidTeacherChanging(System.Nullable<int> value);
    partial void OnidTeacherChanged();
    partial void OndatePublicationChanging(System.Nullable<System.DateTime> value);
    partial void OndatePublicationChanged();
    #endregion
		
		public VideosTable()
		{
			this._CourseVideoJencts = new EntitySet<CourseVideoJenct>(new Action<CourseVideoJenct>(this.attach_CourseVideoJencts), new Action<CourseVideoJenct>(this.detach_CourseVideoJencts));
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVideo
		{
			get
			{
				return this._IdVideo;
			}
			set
			{
				if ((this._IdVideo != value))
				{
					this.OnIdVideoChanging(value);
					this.SendPropertyChanging();
					this._IdVideo = value;
					this.SendPropertyChanged("IdVideo");
					this.OnIdVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statut", DbType="NChar(100)")]
		public string statut
		{
			get
			{
				return this._statut;
			}
			set
			{
				if ((this._statut != value))
				{
					this.OnstatutChanging(value);
					this.SendPropertyChanging();
					this._statut = value;
					this.SendPropertyChanged("statut");
					this.OnstatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre", DbType="NChar(250)")]
		public string titre
		{
			get
			{
				return this._titre;
			}
			set
			{
				if ((this._titre != value))
				{
					this.OntitreChanging(value);
					this.SendPropertyChanging();
					this._titre = value;
					this.SendPropertyChanged("titre");
					this.OntitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descri", DbType="NVarChar(MAX)")]
		public string descri
		{
			get
			{
				return this._descri;
			}
			set
			{
				if ((this._descri != value))
				{
					this.OndescriChanging(value);
					this.SendPropertyChanging();
					this._descri = value;
					this.SendPropertyChanged("descri");
					this.OndescriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlFolder", DbType="NChar(250)")]
		public string urlFolder
		{
			get
			{
				return this._urlFolder;
			}
			set
			{
				if ((this._urlFolder != value))
				{
					this.OnurlFolderChanging(value);
					this.SendPropertyChanging();
					this._urlFolder = value;
					this.SendPropertyChanged("urlFolder");
					this.OnurlFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlThumbnail", DbType="NChar(250)")]
		public string urlThumbnail
		{
			get
			{
				return this._urlThumbnail;
			}
			set
			{
				if ((this._urlThumbnail != value))
				{
					this.OnurlThumbnailChanging(value);
					this.SendPropertyChanging();
					this._urlThumbnail = value;
					this.SendPropertyChanged("urlThumbnail");
					this.OnurlThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int")]
		public System.Nullable<int> idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datePublication", DbType="Date")]
		public System.Nullable<System.DateTime> datePublication
		{
			get
			{
				return this._datePublication;
			}
			set
			{
				if ((this._datePublication != value))
				{
					this.OndatePublicationChanging(value);
					this.SendPropertyChanging();
					this._datePublication = value;
					this.SendPropertyChanged("datePublication");
					this.OndatePublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideosTable_CourseVideoJenct", Storage="_CourseVideoJencts", ThisKey="IdVideo", OtherKey="IdVideo")]
		public EntitySet<CourseVideoJenct> CourseVideoJencts
		{
			get
			{
				return this._CourseVideoJencts;
			}
			set
			{
				this._CourseVideoJencts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_VideosTable", Storage="_Teacher", ThisKey="idTeacher", OtherKey="idTeacher", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.VideosTables.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.VideosTables.Add(this);
						this._idTeacher = value.idTeacher;
					}
					else
					{
						this._idTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseVideoJencts(CourseVideoJenct entity)
		{
			this.SendPropertyChanging();
			entity.VideosTable = this;
		}
		
		private void detach_CourseVideoJencts(CourseVideoJenct entity)
		{
			this.SendPropertyChanging();
			entity.VideosTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JoinCoursesPDFs")]
	public partial class JoinCoursesPDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _idPdf;
		
		private System.Nullable<int> _idCourse;
		
		private EntityRef<CoursesTable> _CoursesTable;
		
		private EntityRef<PDF> _PDF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidPdfChanging(System.Nullable<int> value);
    partial void OnidPdfChanged();
    partial void OnidCourseChanging(System.Nullable<int> value);
    partial void OnidCourseChanged();
    #endregion
		
		public JoinCoursesPDF()
		{
			this._CoursesTable = default(EntityRef<CoursesTable>);
			this._PDF = default(EntityRef<PDF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPdf", DbType="Int")]
		public System.Nullable<int> idPdf
		{
			get
			{
				return this._idPdf;
			}
			set
			{
				if ((this._idPdf != value))
				{
					if (this._PDF.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPdfChanging(value);
					this.SendPropertyChanging();
					this._idPdf = value;
					this.SendPropertyChanged("idPdf");
					this.OnidPdfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int")]
		public System.Nullable<int> idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					if (this._CoursesTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinCoursesPDF", Storage="_CoursesTable", ThisKey="idCourse", OtherKey="Id", IsForeignKey=true)]
		public CoursesTable CoursesTable
		{
			get
			{
				return this._CoursesTable.Entity;
			}
			set
			{
				CoursesTable previousValue = this._CoursesTable.Entity;
				if (((previousValue != value) 
							|| (this._CoursesTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoursesTable.Entity = null;
						previousValue.JoinCoursesPDFs.Remove(this);
					}
					this._CoursesTable.Entity = value;
					if ((value != null))
					{
						value.JoinCoursesPDFs.Add(this);
						this._idCourse = value.Id;
					}
					else
					{
						this._idCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoursesTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PDF_JoinCoursesPDF", Storage="_PDF", ThisKey="idPdf", OtherKey="IdPdf", IsForeignKey=true)]
		public PDF PDF
		{
			get
			{
				return this._PDF.Entity;
			}
			set
			{
				PDF previousValue = this._PDF.Entity;
				if (((previousValue != value) 
							|| (this._PDF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PDF.Entity = null;
						previousValue.JoinCoursesPDFs.Remove(this);
					}
					this._PDF.Entity = value;
					if ((value != null))
					{
						value.JoinCoursesPDFs.Add(this);
						this._idPdf = value.IdPdf;
					}
					else
					{
						this._idPdf = default(Nullable<int>);
					}
					this.SendPropertyChanged("PDF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JoinCoursesExercices")]
	public partial class JoinCoursesExercice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _idCourse;
		
		private System.Nullable<int> _idExercice;
		
		private EntityRef<CoursesTable> _CoursesTable;
		
		private EntityRef<Exercice> _Exercice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidCourseChanging(System.Nullable<int> value);
    partial void OnidCourseChanged();
    partial void OnidExerciceChanging(System.Nullable<int> value);
    partial void OnidExerciceChanged();
    #endregion
		
		public JoinCoursesExercice()
		{
			this._CoursesTable = default(EntityRef<CoursesTable>);
			this._Exercice = default(EntityRef<Exercice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int")]
		public System.Nullable<int> idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					if (this._CoursesTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExercice", DbType="Int")]
		public System.Nullable<int> idExercice
		{
			get
			{
				return this._idExercice;
			}
			set
			{
				if ((this._idExercice != value))
				{
					if (this._Exercice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidExerciceChanging(value);
					this.SendPropertyChanging();
					this._idExercice = value;
					this.SendPropertyChanged("idExercice");
					this.OnidExerciceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoursesTable_JoinCoursesExercice", Storage="_CoursesTable", ThisKey="idCourse", OtherKey="Id", IsForeignKey=true)]
		public CoursesTable CoursesTable
		{
			get
			{
				return this._CoursesTable.Entity;
			}
			set
			{
				CoursesTable previousValue = this._CoursesTable.Entity;
				if (((previousValue != value) 
							|| (this._CoursesTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoursesTable.Entity = null;
						previousValue.JoinCoursesExercices.Remove(this);
					}
					this._CoursesTable.Entity = value;
					if ((value != null))
					{
						value.JoinCoursesExercices.Add(this);
						this._idCourse = value.Id;
					}
					else
					{
						this._idCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoursesTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exercice_JoinCoursesExercice", Storage="_Exercice", ThisKey="idExercice", OtherKey="IdExercice", IsForeignKey=true)]
		public Exercice Exercice
		{
			get
			{
				return this._Exercice.Entity;
			}
			set
			{
				Exercice previousValue = this._Exercice.Entity;
				if (((previousValue != value) 
							|| (this._Exercice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exercice.Entity = null;
						previousValue.JoinCoursesExercices.Remove(this);
					}
					this._Exercice.Entity = value;
					if ((value != null))
					{
						value.JoinCoursesExercices.Add(this);
						this._idExercice = value.IdExercice;
					}
					else
					{
						this._idExercice = default(Nullable<int>);
					}
					this.SendPropertyChanged("Exercice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exercices")]
	public partial class Exercice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdExercice;
		
		private string _urlPdfExo;
		
		private System.Nullable<int> _idTeacher;
		
		private System.Nullable<System.DateTime> _datePublicationExo;
		
		private System.Nullable<System.DateTime> _dateRemiseExo;
		
		private string _titreExo;
		
		private string _DescriExo;
		
		private EntitySet<JoinCoursesExercice> _JoinCoursesExercices;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdExerciceChanging(int value);
    partial void OnIdExerciceChanged();
    partial void OnurlPdfExoChanging(string value);
    partial void OnurlPdfExoChanged();
    partial void OnidTeacherChanging(System.Nullable<int> value);
    partial void OnidTeacherChanged();
    partial void OndatePublicationExoChanging(System.Nullable<System.DateTime> value);
    partial void OndatePublicationExoChanged();
    partial void OndateRemiseExoChanging(System.Nullable<System.DateTime> value);
    partial void OndateRemiseExoChanged();
    partial void OntitreExoChanging(string value);
    partial void OntitreExoChanged();
    partial void OnDescriExoChanging(string value);
    partial void OnDescriExoChanged();
    #endregion
		
		public Exercice()
		{
			this._JoinCoursesExercices = new EntitySet<JoinCoursesExercice>(new Action<JoinCoursesExercice>(this.attach_JoinCoursesExercices), new Action<JoinCoursesExercice>(this.detach_JoinCoursesExercices));
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExercice", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdExercice
		{
			get
			{
				return this._IdExercice;
			}
			set
			{
				if ((this._IdExercice != value))
				{
					this.OnIdExerciceChanging(value);
					this.SendPropertyChanging();
					this._IdExercice = value;
					this.SendPropertyChanged("IdExercice");
					this.OnIdExerciceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlPdfExo", DbType="NVarChar(MAX)")]
		public string urlPdfExo
		{
			get
			{
				return this._urlPdfExo;
			}
			set
			{
				if ((this._urlPdfExo != value))
				{
					this.OnurlPdfExoChanging(value);
					this.SendPropertyChanging();
					this._urlPdfExo = value;
					this.SendPropertyChanged("urlPdfExo");
					this.OnurlPdfExoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int")]
		public System.Nullable<int> idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datePublicationExo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datePublicationExo
		{
			get
			{
				return this._datePublicationExo;
			}
			set
			{
				if ((this._datePublicationExo != value))
				{
					this.OndatePublicationExoChanging(value);
					this.SendPropertyChanging();
					this._datePublicationExo = value;
					this.SendPropertyChanged("datePublicationExo");
					this.OndatePublicationExoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRemiseExo", DbType="Date")]
		public System.Nullable<System.DateTime> dateRemiseExo
		{
			get
			{
				return this._dateRemiseExo;
			}
			set
			{
				if ((this._dateRemiseExo != value))
				{
					this.OndateRemiseExoChanging(value);
					this.SendPropertyChanging();
					this._dateRemiseExo = value;
					this.SendPropertyChanged("dateRemiseExo");
					this.OndateRemiseExoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titreExo", DbType="NVarChar(MAX)")]
		public string titreExo
		{
			get
			{
				return this._titreExo;
			}
			set
			{
				if ((this._titreExo != value))
				{
					this.OntitreExoChanging(value);
					this.SendPropertyChanging();
					this._titreExo = value;
					this.SendPropertyChanged("titreExo");
					this.OntitreExoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriExo", DbType="NVarChar(MAX)")]
		public string DescriExo
		{
			get
			{
				return this._DescriExo;
			}
			set
			{
				if ((this._DescriExo != value))
				{
					this.OnDescriExoChanging(value);
					this.SendPropertyChanging();
					this._DescriExo = value;
					this.SendPropertyChanged("DescriExo");
					this.OnDescriExoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exercice_JoinCoursesExercice", Storage="_JoinCoursesExercices", ThisKey="IdExercice", OtherKey="idExercice")]
		public EntitySet<JoinCoursesExercice> JoinCoursesExercices
		{
			get
			{
				return this._JoinCoursesExercices;
			}
			set
			{
				this._JoinCoursesExercices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Exercice", Storage="_Teacher", ThisKey="idTeacher", OtherKey="idTeacher", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Exercices.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Exercices.Add(this);
						this._idTeacher = value.idTeacher;
					}
					else
					{
						this._idTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JoinCoursesExercices(JoinCoursesExercice entity)
		{
			this.SendPropertyChanging();
			entity.Exercice = this;
		}
		
		private void detach_JoinCoursesExercices(JoinCoursesExercice entity)
		{
			this.SendPropertyChanging();
			entity.Exercice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PDFs")]
	public partial class PDF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPdf;
		
		private string _urlPdf;
		
		private System.Nullable<int> _idTeacher;
		
		private System.Nullable<System.DateTime> _datePublication;
		
		private string _titreCours;
		
		private string _DescriCours;
		
		private EntitySet<JoinCoursesPDF> _JoinCoursesPDFs;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPdfChanging(int value);
    partial void OnIdPdfChanged();
    partial void OnurlPdfChanging(string value);
    partial void OnurlPdfChanged();
    partial void OnidTeacherChanging(System.Nullable<int> value);
    partial void OnidTeacherChanged();
    partial void OndatePublicationChanging(System.Nullable<System.DateTime> value);
    partial void OndatePublicationChanged();
    partial void OntitreCoursChanging(string value);
    partial void OntitreCoursChanged();
    partial void OnDescriCoursChanging(string value);
    partial void OnDescriCoursChanged();
    #endregion
		
		public PDF()
		{
			this._JoinCoursesPDFs = new EntitySet<JoinCoursesPDF>(new Action<JoinCoursesPDF>(this.attach_JoinCoursesPDFs), new Action<JoinCoursesPDF>(this.detach_JoinCoursesPDFs));
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPdf", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPdf
		{
			get
			{
				return this._IdPdf;
			}
			set
			{
				if ((this._IdPdf != value))
				{
					this.OnIdPdfChanging(value);
					this.SendPropertyChanging();
					this._IdPdf = value;
					this.SendPropertyChanged("IdPdf");
					this.OnIdPdfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlPdf", DbType="NVarChar(MAX)")]
		public string urlPdf
		{
			get
			{
				return this._urlPdf;
			}
			set
			{
				if ((this._urlPdf != value))
				{
					this.OnurlPdfChanging(value);
					this.SendPropertyChanging();
					this._urlPdf = value;
					this.SendPropertyChanged("urlPdf");
					this.OnurlPdfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int")]
		public System.Nullable<int> idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datePublication", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datePublication
		{
			get
			{
				return this._datePublication;
			}
			set
			{
				if ((this._datePublication != value))
				{
					this.OndatePublicationChanging(value);
					this.SendPropertyChanging();
					this._datePublication = value;
					this.SendPropertyChanged("datePublication");
					this.OndatePublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titreCours", DbType="NVarChar(MAX)")]
		public string titreCours
		{
			get
			{
				return this._titreCours;
			}
			set
			{
				if ((this._titreCours != value))
				{
					this.OntitreCoursChanging(value);
					this.SendPropertyChanging();
					this._titreCours = value;
					this.SendPropertyChanged("titreCours");
					this.OntitreCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriCours", DbType="NVarChar(MAX)")]
		public string DescriCours
		{
			get
			{
				return this._DescriCours;
			}
			set
			{
				if ((this._DescriCours != value))
				{
					this.OnDescriCoursChanging(value);
					this.SendPropertyChanging();
					this._DescriCours = value;
					this.SendPropertyChanged("DescriCours");
					this.OnDescriCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PDF_JoinCoursesPDF", Storage="_JoinCoursesPDFs", ThisKey="IdPdf", OtherKey="idPdf")]
		public EntitySet<JoinCoursesPDF> JoinCoursesPDFs
		{
			get
			{
				return this._JoinCoursesPDFs;
			}
			set
			{
				this._JoinCoursesPDFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_PDF", Storage="_Teacher", ThisKey="idTeacher", OtherKey="idTeacher", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.PDFs.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.PDFs.Add(this);
						this._idTeacher = value.idTeacher;
					}
					else
					{
						this._idTeacher = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JoinCoursesPDFs(JoinCoursesPDF entity)
		{
			this.SendPropertyChanging();
			entity.PDF = this;
		}
		
		private void detach_JoinCoursesPDFs(JoinCoursesPDF entity)
		{
			this.SendPropertyChanging();
			entity.PDF = null;
		}
	}
}
#pragma warning restore 1591
